/**
 * (C) Copyright IBM Corp. 2022.
 *
 * Licensed under the MIT License (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * https://opensource.org/licenses/MIT
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 *
 */
import React, { ReactNode } from 'react';
import { CustomResponseEvent } from './types/CustomResponseEvent';
import { WebChatInstance } from './types/WebChatInstance';
interface CustomResponsePortalsContainer {
    /**
     * The instance of a web chat that this component will register listeners on.
     */
    webChatInstance: WebChatInstance;
    /**
     * The function that this component will use to request the actual React content to display for each custom
     * response.
     */
    renderResponse: (event: CustomResponseEvent, instance: WebChatInstance) => ReactNode;
}
/**
 * This is a utility component that is used to manage all the custom responses that are rendered by web chat. When a
 * custom response message is received by web chat, it will fire a "customResponse" event that provides an HTML element
 * to which your application can attach custom content. React portals are a mechanism that allows you to render a
 * component in your React application but attach that component to the HTML element that was provided by web chat.
 *
 * When this component is mounted, it will register a listener for the "customResponse" event from web chat. It will
 * save each event in a list and then render a portal for each event. Each portal will be attached to the element that
 * was created by web chat and is where that custom response should be attached.
 *
 * To use this component, all you need to do is mount is somewhere in your application; it doesn't really matter
 * where but you should make sure that the component does not get unmounted because it will lose all the custom
 * responses that had been received prior to that point.
 */
declare function CustomResponsePortalsContainer({ webChatInstance, renderResponse }: CustomResponsePortalsContainer): React.JSX.Element;
declare const CustomResponsePortalsContainerExport: React.MemoExoticComponent<typeof CustomResponsePortalsContainer>;
export { CustomResponsePortalsContainerExport as CustomResponsePortalsContainer };
